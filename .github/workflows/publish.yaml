name: Publish Forge Mod (Modrinth Only)

on:
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish build? (true/false)'
        required: true
        default: 'false'
      version_number:
        description: 'Version number (leave blank to use vortex.mcreator)'
        required: false
        default: '1.0.1'
      version_type:
        description: 'Version type (release / beta / alpha)'
        required: true
        default: 'release'

env:
  JAVA_VERSION: 17

permissions:
  contents: read

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    if: github.event.inputs.publish == 'true'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Make Gradle Wrapper Executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      # Uncomment if you actually need datagen
      # - name: Run Datagen
      #   run: ./gradlew runData

      - name: Build Forge Mod
        run: ./gradlew clean build

      # 📄 Read version from vortex.mcreator
      - name: Read version from vortex.mcreator
        id: get_version
        run: |
          VER=$(jq -r '.version' vortex.mcreator)
          echo "version=$VER" >> $GITHUB_OUTPUT

      # 🏷️ Pick version: input or vortex.mcreator
      - name: Set version to use
        id: pick_version
        run: |
          if [ "${{ github.event.inputs.version_number }}" != "" ]; then
            echo "chosen_version=${{ github.event.inputs.version_number }}" >> $GITHUB_OUTPUT
          else
            echo "chosen_version=${{ steps.get_version.outputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Publish to Modrinth
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          changelog-file: CHANGELOG.md
          modrinth-id: t8XrTxoM
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-generate-changelog: true
          version-type: ${{ github.event.inputs.version_type }}
          version: ${{ steps.pick_version.outputs.chosen_version }}
          loaders: forge
          java: ${{ env.JAVA_VERSION }}
